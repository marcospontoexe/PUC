#Aluno: Marcos Daniel Santana
#Grupo: 45

-- -----------------------------------------------------
-- Criando o banco de dados
-- -----------------------------------------------------
CREATE SCHEMA `lanchonete`  #cria um banco de dados com constraitns.
DEFAULT CHARACTER SET utf8  #codificação de caracteres (utf8 possui acentos)
default collate utf8_general_ci;  # definindo um collation


-- -----------------------------------------------------
-- Criando oas tabelas
-- -----------------------------------------------------
use lanchonete;				#Abre o banco de dados

-- Table `lanchonete`.`Cardapio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanchonete`.`Cardapio` (
  `idCardapio` INT NOT NULL AUTO_INCREMENT,
  `Nome` VARCHAR(45) NOT NULL,
  `Preco` DECIMAL(5,2) NOT NULL,
  PRIMARY KEY (`idCardapio`)
)default charset = utf8;

-- Table `lanchonete`.`CepCliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanchonete`.`CepCliente` (
  `idCepCliente` VARCHAR(10) NOT NULL,
  `Cep` VARCHAR(10) NOT NULL,
  `Rua` VARCHAR(45) NOT NULL,
  `NumeroResidencial` INT NOT NULL,
  `Cidade` VARCHAR(45) default 'Curitiba',
  `Complemento` VARCHAR(45),
  PRIMARY KEY (`idCepCliente`),
  UNIQUE INDEX `Cep_UNIQUE` (`Cep` ASC) VISIBLE
)default charset = utf8;

-- Table `lanchonete`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanchonete`.`Cliente` (
  `idCliente` INT NOT NULL AUTO_INCREMENT,
  `Nome` VARCHAR(45) NOT NULL,
  `Cep` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idCliente`),
  INDEX `fk_Cliente_CepCliente1_idx` (`Cep` ASC) VISIBLE,
  CONSTRAINT `fk_Cliente_CepCliente1`
    FOREIGN KEY (`Cep`)
    REFERENCES `lanchonete`.`CepCliente` (`idCepCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)default charset = utf8;

-- Table `lanchonete`.`Entregadores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanchonete`.`Entregadores` (
  `idEntregadores` INT NOT NULL AUTO_INCREMENT,
  `Nome` VARCHAR(45) NOT NULL,
  `Celular` VARCHAR(17) NOT NULL,
  PRIMARY KEY (`idEntregadores`)
)default charset = utf8;

-- Table `mydb`.`Pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanchonete`.`Pedido` (
  `idPedido` INT NOT NULL AUTO_INCREMENT,
  `Status` ENUM('1', '2', '3') NOT NULL,
  `Data` DATE NOT NULL,
  `CodCliente` INT NOT NULL,
  `CodEntregador` INT NOT NULL,
  PRIMARY KEY (`idPedido`),
  INDEX `fk_Pedido_Cliente_idx` (`CodCliente` ASC) VISIBLE,
  INDEX `fk_Pedido_Entregadores1_idx` (`CodEntregador` ASC) VISIBLE,
  CONSTRAINT `fk_Pedido_Cliente`
    FOREIGN KEY (`CodCliente`)
    REFERENCES `lanchonete`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_Entregadores1`
    FOREIGN KEY (`CodEntregador`)
    REFERENCES `lanchonete`.`Entregadores` (`idEntregadores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)default charset = utf8;

-- Table `lanchonete`.`Item_Pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanchonete`.`Item_Pedido` (
  `CodPedido` INT NOT NULL,
  `CodLanche` INT NOT NULL,
  `Quantidade` INT NOT NULL,
  PRIMARY KEY (`CodPedido`, `CodLanche`),
  INDEX `fk_Item_Pedido_Cardapio1_idx` (`CodLanche` ASC) VISIBLE,
  CONSTRAINT `fk_Item_Pedido_Pedido1`
    FOREIGN KEY (`CodPedido`)
    REFERENCES `lanchonete`.`Pedido` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Item_Pedido_Cardapio1`
    FOREIGN KEY (`CodLanche`)
    REFERENCES `lanchonete`.`Cardapio` (`idCardapio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)default charset = utf8;

-- Table `lanchonete`.`ClienteTelefones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lanchonete`.`ClienteTelefones` (
  `idClienteTelefones` INT NOT NULL,
  `Telefone` VARCHAR(17) NOT NULL,
  PRIMARY KEY (`idClienteTelefones`, `Telefone`),
  CONSTRAINT `fk_ClienteTelefones_Cliente1`
    FOREIGN KEY (`idClienteTelefones`)
    REFERENCES `lanchonete`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)default charset = utf8;


-- -----------------------------------------------------
-- Inserindo dados nas tabelas
-- -----------------------------------------------------
use lanchonete;				#Abre o banco de dados

insert into Cardapio values 
(default, 'X-mostro', '23.90'),
(default, 'Junior', '9.90'),
(default, 'X-Infarto', '32.90'),
(default, 'X-Boi', '25.90'),
(default, 'X-Mato', '43.90');

insert into CepCliente values 
('01', '81.490-210', 'Rua das dores', '500', default, ''),
('02', '81.490-070', 'Ruas das feridas', '510', 'Espigão das Antas', 'Final da rua'),
('03', '79.020-590', 'Rua dos machucados', '02', 'Terra Boa', 'Final da rua');

insert into Cliente values 
(default, 'Franciscão da Silva', '01'),
(default, 'Creuza Souza', '02'),
(default, 'João de Deus', '03');

insert into Entregadores values 
(default, 'Zé', '(41)99991-9899'),
(default, 'Jú', '(41)98897-9899');

insert into ClienteTelefones values 
('1', '(41)99991-0101'),
('1', '(41)98853-0202'),
('2', '(41)99741-0101'),
('3', '(41)98100-0202');

insert into Pedido values 
(default, '1', '2025-04-20', '1', '1'),
(default, '1', '2025-04-20', '2', '1'),
(default, '3', '2025-04-20', '3', '2'),
(default, '2', '2025-04-20', '1', '1');

insert into Item_Pedido values 
('1', '2', '2'),
('1', '4', '1'),
('3', '3', '2'),
('2', '5', '2'),
('2', '4', '1');


-- -----------------------------------------------------
-- Consutando dados nas tabelas
-- -----------------------------------------------------
select * from Cardapio
select * from CepCliente
select * from Cliente
select * from Pedido
select * from Item_Pedido

Select IdPedido, CodCliente, CodEntregador, Status from Pedido	  #mostra apenas alguns dos campos da tabela
order by Data, CodCliente;						#primeiro ordena por ano e depis CodCliente

select * from Cliente as c join Pedido as p	#juntando a instancia Cliente com a instância Pedido
on c.idCliente = p.CodCliente		#fazendo a conexão entre as duas instancias
join Item_Pedido as ip		#juntando a instancia Item_Pedido com a instância de conexão
on ip.CodPedido = p.idPedido		#fazendo a conexão entre as duas instancias